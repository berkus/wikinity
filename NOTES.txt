TODO list:
- examine wiki API and implement the most basic - getting an article, with
one image (if any), with a small initial snippet, with categories, and
"See also" links.
-
- phase out using mwclient, write a smaller simpler module on its basis.

--------------------------------------------------------------------------------
Notes:
- for snippet use section 0 of the page

- Categories URL:
http://en.wikipedia.org/w/api.php?generator=categories&format=jsonfm&gcllimit=500&titles=Fanta&action=query

- Images URL:
http://en.wikipedia.org/w/api.php?format=jsonfm&titles=philosophy&action=query&generator=images&gimlimit=500


--------------------------------------------------------------------------------

After some research and thinking, it seems the best way is to go forward with
an interface in HTML5. The functionality offered there looks very much
sufficient for creating dynamic maps (e.g. http://arborjs.org/).

The final outcome would be a site running the visual browser on HTML5+Ajax,
submitting queries to and getting results (via XmlHttpRequest) from a web
server running a Python application. Google AppEngine looks suitable for this,
especially since free users have a large quota (1 GB data both in and out,
6.5h CPU time and 1.3M HTTP requests per day. A request can take up to 30
seconds.

It is also possible to have all the functionality in the HTML5 page, since
wiki API is queried over HTTP anyway, but at first at least seems easier to
use a more advanced programming platform than browser JavaScript.

Roadmap then: initially continue developing the desktop application, which
later will morph into the backend server. First do the initial wiki browsing/
parsing logic, and start working on the GUI part.

31.03.2011 Erki Suurjaak
--------------------------------------------------------------------------------
